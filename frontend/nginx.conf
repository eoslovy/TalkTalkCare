worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    upstream backend-server {
        server backend:8080;
    }

    upstream openvidu-server {
        server openvidu:4443;
    }

    # HTTP -> HTTPS 리다이렉트
    server {
        listen 80;
        server_name talktalkcare.com www.talktalkcare.com;
        return 301 https://$host$request_uri;
    }

    # HTTPS 설정
    server {
        listen 443 ssl;
        server_name talktalkcare.com www.talktalkcare.com;

        ssl_certificate /etc/letsencrypt/live/talktalkcare.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/talktalkcare.com/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # OpenVidu WebSocket 및 API 요청
        location /openvidu {
            proxy_pass https://openvidu-server;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            
            # 타임아웃 설정
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
            proxy_connect_timeout 86400;
            
            # ICE 연결을 위한 설정
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket 최적화
            proxy_buffering off;
            proxy_cache off;
            
            # SSL 설정
            proxy_ssl_verify off;
            proxy_ssl_session_reuse on;
            
            # CORS 설정
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
            
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # WebRTC 시그널링
        location /webrtc {
            proxy_pass https://openvidu:4443;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_read_timeout 86400;
        }

        # WebSocket 연결을 백엔드로 프록시
        location /ws {
            proxy_pass http://backend:8080;  # 도커 네트워크 내부 통신
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_read_timeout 86400;
        }

        # 백엔드 API 요청
        location /api {
            proxy_pass http://backend-server;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # OpenVidu API 전용 경로
        location /openvidu/api {
            proxy_pass https://openvidu-server;
            proxy_ssl_verify off;
            proxy_set_header Host $host;
            
            # CORS 설정
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
        }

        # Kurento Media Server WebSocket
        location /kurento {
            proxy_pass http://openvidu:8888/kurento;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_ssl_verify off;
        }

        # 프론트엔드 요청 처리
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }
    }
}
