image: docker:latest

stages:
  - build
  - deploy

variables:
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375
  MYSQL_ROOT_PASSWORD: "1234"
  MYSQL_DATABASE: "talktalkcare"
  MYSQL_USER: "ssafy"
  MYSQL_PASSWORD: "1234"
  SPRING_DATASOURCE_URL: "jdbc:mysql://mysql:3306/talktalkcare?serverTimezone=Asia/Seoul&characterEncoding=UTF-8&useSSL=false&allowPublicKeyRetrieval=true"
  SPRING_DATASOURCE_USERNAME: "ssafy"
  SPRING_DATASOURCE_PASSWORD: "1234"

services:
  - name: docker:dind
    alias: docker
    entrypoint: ["dockerd-entrypoint.sh"]
    command: 
      - "--tls=false"
      - "--host=tcp://0.0.0.0:2375"

before_script:
  - apk add --no-cache docker-compose
  - |
    echo "Configuring docker..."
    until docker info; do
      sleep 1
    done
  - docker network create cicd_network || true

build-backend:
  stage: build
  script:
    - docker-compose -f docker-compose.yml build backend
  rules:
    - changes:
        - backend/**
    - when: always
  variables:
    DOCKER_PRIVILEGED: "true"

build-frontend:
  stage: build
  script:
    - docker-compose -f docker-compose.yml build frontend
  rules:
    - changes:
        - frontend/**
    - when: always
  variables:
    DOCKER_PRIVILEGED: "true"

deploy-backend:
  stage: deploy
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | base64 -d | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    # EC2로 필요한 파일들 복사
    - scp docker-compose.yml $SSH_USER@$SSH_HOST:~/
    - scp .env $SSH_USER@$SSH_HOST:~/
    # EC2에서 도커 컴포즈 실행
    - ssh $SSH_USER@$SSH_HOST "docker-compose down || true"
    - ssh $SSH_USER@$SSH_HOST "docker-compose pull"
    - ssh $SSH_USER@$SSH_HOST "docker-compose up -d"
  rules:
    - changes:
        - backend/**
    - when: always
  variables:
    DOCKER_PRIVILEGED: "true"

deploy-frontend:
  stage: deploy
  script:
    - docker-compose -f docker-compose.yml up -d frontend
  rules:
    - changes:
        - frontend/**
    - when: always
  variables:
    DOCKER_PRIVILEGED: "true"
